import SwiftUI

@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
extension View {
    public func registerOAuthHandler() -> some View {
        onOpenURL { url in
            let components = URLComponents(string: url.absoluteString)!

            let cookieParts = [String: String](uniqueKeysWithValues: components.queryItems!.map {
                ($0.name, $0.value!)
            })

            UserDefaults.standard.set(cookieParts["key"], forKey: "cookie-name-\(components.host!)")
            UserDefaults.standard.set(cookieParts["secret"], forKey: "cookie-value-\(components.host!)")

            WebAuthComponent.onCallback(
                scheme: components.scheme!,
                url: components.url!
            )
        }.onReceive(NotificationCenter.default.publisher(for: UIApplication.willEnterForegroundNotification)) { _ in
            WebAuthComponent.onCallback()
        }
    }
}
