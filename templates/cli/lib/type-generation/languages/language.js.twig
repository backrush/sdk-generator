/** @typedef {import('../attributes').Attribute} Attribute */

class Language {
  constructor() {
    if (new.target === Language) {
      throw new TypeError("Abstract classes can't be instantiated.");
    }
  }

  /**
   * @param {string} string
   * @returns {string}
   */
  static toKebabCase(string) {
    return string
      .split("")
      .map((letter) => {
        if (/[A-Z]/.test(letter)) {
          return ` ${letter.toLowerCase()}`;
        }
        return letter;
      })
      .join("")
      .trim()
      .replace(/[_\s]+/g, "-");
  }

  /**
   * @param {string} string
   * @returns {string}
   */
  static toSnakeCase(string) {
    return this.toKebabCase(string).replace(/-/g, "_");
  }

  /**
   * @param {string} string
   * @returns {string}
   */
  static toUpperSnakeCase(string) {
    return this.toSnakeCase(string).toUpperCase();
  }

  /**
   * @param {string} string
   * @returns {string}
   */
  static toPascalCase(string) {
    return this.toKebabCase(string)
      .split("-")
      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
      .join("");
  }

  /**
   * @param {string} string
   * @returns {string}
   */
  static toCamelCase(string) {
    return this.toPascalCase(string).charAt(0).toLowerCase() + string.slice(1);
  }

  /**
   * Get the type literal of the given attribute.
   *
   * @abstract
   * @param {Attribute} attribute
   * @return {string}
   */
  static getType(attribute) {
    throw new TypeError("Stub.");
  }

  /**
   * Get the EJS template used to generate the types for this language.
   * 
   * @abstract
   * @returns {string}
   */
  static getTemplate() {
    throw new TypeError("Stub.");
  }

  /**
   * Get the file extension used by files of this language.
   * 
   * @abstract
   * @returns {string}
   */
  static getOutputPath() {
    throw new TypeError("Stub.");
  }
}

module.exports = { Language };