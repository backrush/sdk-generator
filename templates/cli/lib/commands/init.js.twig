const { Command } = require("commander");
const inquirer = require("inquirer");
const { projectsCreate } = require("./projects");
const { sdkForConsole } = require("../sdks");
const { localConfig, globalConfig } = require("../config");
const { questionsCreateProject } = require("../questions");
const { success, error, actionRunner, commandDescriptions } = require("../parser");
const { accountGet } = require("./account");
const { loginCommand } = require("./generic");

const initProject = async () => {
    let response = {};

    try {
        if (globalConfig.getEndpoint() === '' || globalConfig.getCookie() === '') {
            throw '';
        }
        await accountGet({
            parseOutput: false
        });
    } catch (e) {
        error('You must login first')
        await loginCommand()
    }

    const answers = await inquirer.prompt(questionsCreateProject)
    if (!answers.project || !answers.organization) process.exit(1)

    response = await projectsCreate({
        projectId: answers.id,
        name: answers.project,
        teamId: answers.organization.id,
        parseOutput: false
    })

    localConfig.setProject(response['$id'], response.name);
    success();
}

const init = new Command("init")
    .description('Init and create a new {{ spec.title|caseUcfirst }} project')
    .configureHelp({
        helpWidth: process.stdout.columns || 80
    })
    .action(actionRunner(initProject));

module.exports = {
    init,
};
