type QueryTypeSearchable = string | number;
type QueryTypesSingle = string | number | boolean;
export type QueryTypesList = string[] | number[] | boolean[];
export type QueryTypes = QueryTypesSingle | QueryTypesList;
type AttributesTypes = string | string[];

function buildQuery(
  method: string,
  attributes?: AttributesTypes,
  values?: QueryTypes | [QueryTypeSearchable, QueryTypeSearchable]
): string {
  const query = {
    method,
  };

  if (attributes) {
    query["attribute"] = attributes;
  }

  if (values) {
    query["values"] = values;
  }

  return JSON.stringify(query);
}

export class Query {
  static equal = (attribute: string, value: QueryTypes): string =>
    buildQuery("equal", attribute, value);

  static notEqual = (attribute: string, value: QueryTypes): string =>
    buildQuery("notEqual", attribute, value);

  static lessThan = (attribute: string, value: QueryTypes): string =>
    buildQuery("lessThan", attribute, value);

  static lessThanEqual = (attribute: string, value: QueryTypes): string =>
    buildQuery("lessThanEqual", attribute, value);

  static greaterThan = (attribute: string, value: QueryTypes): string =>
    buildQuery("greaterThan", attribute, value);

  static greaterThanEqual = (attribute: string, value: QueryTypes): string =>
    buildQuery("greaterThanEqual", attribute, value);

  static isNull = (attribute: string): string =>
    buildQuery("isNull", attribute);

  static isNotNull = (attribute: string): string =>
    buildQuery("isNotNull", attribute);

  static between = (
    attribute: string,
    start: QueryTypeSearchable,
    end: QueryTypeSearchable
  ) => buildQuery("between", attribute, [start, end]);

  static startsWith = (attribute: string, value: string): string =>
    buildQuery("startsWith", attribute, value);

  static endsWith = (attribute: string, value: string): string =>
    buildQuery("endsWith", attribute, value);

  static select = (attributes: string[]): string =>
    buildQuery("select", attributes);

  static search = (attribute: string, value: string): string =>
    buildQuery("search", attribute, value);

  static orderDesc = (attribute: string): string =>
    buildQuery("orderDesc", attribute);

  static orderAsc = (attribute: string): string =>
    buildQuery("orderAsc", attribute);

  static cursorAfter = (documentId: string): string =>
    buildQuery("cursorAfter", documentId);

  static cursorBefore = (documentId: string): string =>
    buildQuery("cursorBefore", documentId);

  static limit = (limit: number): string =>
    buildQuery("limit", undefined, limit);

  static offset = (offset: number): string =>
    buildQuery("offset", undefined, offset);
}
