type QueryTypes = string | string[] | number | number [] | boolean | boolean[];
type QueryTypesList = string[] | number[] | boolean[];

class Query {
  static equal(attribute: string, value: QueryTypes): string {
    return Query.addQuery(attribute, 'equal', value);
  }

  static notEqual(attribute: string, value: QueryTypes): string {
    return Query.addQuery(attribute, 'notEqual', value);
  }

  static lesser(attribute: string, value: QueryTypes): string {
    return Query.addQuery(attribute, 'lesser', value);
  }

  static lesserEqual(attribute: string, value: QueryTypes): string {
    return Query.addQuery(attribute, 'lesserEqual', value);
  }

  static greater(attribute: string, value: QueryTypes): string {
    return Query.addQuery(attribute, 'greater', value);
  }

  static greaterEqual(attribute: string, value: QueryTypes): string {
    return Query.addQuery(attribute, 'greaterEqual', value);
  }

  static contains(attribute: string, value: QueryTypesList): string {
    return Query.addQuery(attribute, 'contains', value);
  }

  static addQuery(attribute: string, oper: string, value: unknown): string {
    if (value instanceof Array) {
      return `${attribute}.${oper}(${value.map(v => Query.parseValues(v)).join(',')})`;
    }
    return `${attribute}.${oper}(${Query.parseValues(value)})`;
  }

  static parseValues(value: unknown): string {
    if (typeof value === 'string' || value instanceof String) {
      return `"${value}"`;
    }
    return `${value}`;
  }
}
