package {{ sdk.namespace | caseDot }}.servicesTest

import com.google.gson.GsonBuilder
import com.google.gson.JsonElement
import com.google.gson.JsonParser
import {{ sdk.namespace | caseDot }}.Client
import {{ sdk.namespace | caseDot }}.exceptions.AppwriteException
import {{ sdk.namespace | caseDot }}.services.{{ service.name | caseUcfirst }}
import javax.xml.bind.DatatypeConverter.parseString
import java.io.File


suspend fun main() {
    val client = Client()
        .setProject("6062f9c2c09ce")
        .setEndpoint("https://demo.appwrite.io/v1")
        .setKey("d117e5f8b27d1a543d9080e6289f434b8687a1666737ad77a76907ecfabcffec682fdcea0f073729690263675e814485bf1788ce65ba51cc1c90e3de597cdb95bfb0fd2c8d8d207dc07ab1a112feb167d389cf047fc4e46f99e47ae0b0beb1c3787610154daea5c1fa493013e62239ef6cfd63cf02c8d9b63c0e48bf4bdf3bb4")

    val {{ service.name | caseLower }} = {{ service.name | caseUcfirst }}(client)

{% for method in service.methods %}
    {{ method.name | caseLower }}Test({{ service.name | caseLower }})
{% endfor %}

}

{% for method in service.methods %}
suspend fun {{ method.name | caseLower }}Test({{ service.name | caseLower }}: {{ service.name | caseUcfirst }}) {
    try {
        val response = {{ service.name | caseCamel }}.{{ method.name | caseCamel }}({% if method.parameters.all | length == 0 %}){% endif %}

{% for parameter in method.parameters.all %}
{% if parameter.required %}
                {{parameter.name}} = {{ parameter | paramExample }}{% if not loop.last %},{% endif %}

{% endif %}
{% if loop.last %}
        )
{% endif %}
{% endfor %}
        var jsonString = response.body?.string() ?: ""
        val gson = GsonBuilder().setPrettyPrinting().create()
        val je: JsonElement = JsonParser().parse(jsonString)
        println(gson.toJson(je))
    } catch (e: AppwriteException) {
        println(e)
    }
}
{% endfor %}








