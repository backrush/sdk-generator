const Service = require('../service.js');
const {{spec.title | caseUcfirst}}Exception = require('../exception.js');
const InputFile = require('../inputFile.js');
const client = require('../client.js');
const Stream = require('stream');
const { promisify } = require('util');
const fs = require('fs');

class {{ service.name | caseUcfirst }} extends Service {
{% if service.globalParams | length %}
{% for parameter in service.globalParams %}
    {{ parameter.name | caseCamel | escapeKeyword }};
    /**
     * Set {{ parameter.name }}.
     *
     * @param {{ '{' }}{{ parameter.type | typeName }}{{ '}' }} {{ parameter.name | caseCamel | escapeKeyword }}
     *
     * @return void
     */
     set{{ parameter.name | caseUcfirst | escapeKeyword }}({{ parameter.name | caseCamel | escapeKeyword }})
     {
        this.{{ parameter.name | caseCamel | escapeKeyword }} = {{ parameter.name | caseCamel | escapeKeyword }};
     }
    /**
     * Get {{ parameter.name }}.
     *
     * @return {{ parameter.type | typeName }}
     */
     get{{ parameter.name | caseUcfirst | escapeKeyword }}()
     {
        return this.{{ parameter.name | caseCamel | escapeKeyword }};
     }
{% endfor %}
     constructor(client, {% for parameter in service.globalParams %} {{ parameter.name | caseCamel | escapeKeyword }}{% if not parameter.required %} = null{% endif %}{% if not loop.last %}, {% endif %}{% endfor %})
     {
        super(client);

{% for parameter in service.globalParams %}
        this.{{ parameter.name | caseCamel | escapeKeyword }} = {{ parameter.name | caseCamel | escapeKeyword }};
{% endfor %}
     }
{% endif %}
{% for method in service.methods %}

    /**
     * {{ method.title }}
     *
{% if method.description %}
{{ method.description|comment1 }}
     *
{% endif %}
{% for parameter in method.parameters.all | filter((param) => not param.isGlobal) %}
     * @param {{ '{' }}{{ parameter.type | typeName }}{{ '}' }} {{ parameter.name | caseCamel | escapeKeyword }}
{% endfor %}
     * @throws {{ '{' }}{{ spec.title | caseUcfirst}}Exception}
     * @returns {Promise}
     */
    async {{ method.name | caseCamel }}({% for parameter in method.parameters.all | filter((param) => not param.isGlobal) %}{{ parameter.name | caseCamel | escapeKeyword }}{% if not loop.last %}, {% endif %}{% endfor %}{% if 'multipart/form-data' in method.consumes %}, onProgress = () => {}{% endif %}) {
        let path = '{{ method.path }}'{% for parameter in method.parameters.path %}.replace('{{ '{' }}{{ parameter.name | caseCamel }}{{ '}' }}', {% if parameter.isGlobal %}this.{% endif %}{{ parameter.name | caseCamel | escapeKeyword }}){% endfor %};
{{ include ('node/base/params.twig')}}
{% if 'multipart/form-data' in method.consumes %}
{{ include ('node/base/requests/file.twig')}}
{% else %}
{{ include('node/base/requests/api.twig') }}
{% endif %}
    }
{% endfor %}
}

module.exports = {{ service.name | caseUcfirst }};
