const { readFileSync } = require("fs");
const { ReadableStream } = require("stream/web");

const _bufferToString = (buffer) => {
  return new ReadableStream({
    start(controller) {
      controller.enqueue(buffer);
      controller.close();
    },
  });
};

class InputFile {
  stream; // Content of file as a stream
  size; // Total final size of the file content
  filename; // File name

  static fromPath = (filePath, filename) => {
    const data = readFileSync(filePath);
    const stream = _bufferToString(data);
    const size = data.byteLength;
    return new InputFile(stream, filename, size);
  };

  static fromBuffer = (buffer, filename) => {
    const stream = _bufferToString(buffer);
    const size = buffer.byteLength;
    return new InputFile(stream, filename, size);
  };

  static fromPlainText = (content, filename) => {
    const buffer = new TextEncoder().encode(content);
    const stream = _bufferToString(buffer);
    const size = buffer.byteLength;
    return new InputFile(stream, filename, size);
  };

  constructor(stream, filename, size) {
    this.stream = stream;
    this.filename = filename;
    this.size = size;
  }
}

module.exports = InputFile;