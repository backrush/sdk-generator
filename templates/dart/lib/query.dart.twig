part of {{ language.params.packageName }};

class Query {
  static equal(String attribute, dynamic value) =>
      _addQuery(attribute, 'equal', value);

  static notEqual(String attribute, dynamic value) =>
      _addQuery(attribute, 'notEqual', value);

  static lessThan(String attribute, dynamic value) =>
      _addQuery(attribute, 'lessThan', value);

  static lessThanEqual(String attribute, dynamic value) =>
      _addQuery(attribute, 'lessThanEqual', value);

  static greaterThan(String attribute, dynamic value) =>
      _addQuery(attribute, 'greaterThan', value);

  static greaterThanEqual(String attribute, dynamic value) =>
      _addQuery(attribute, 'greaterThanEqual', value);

  static search(String attribute, String value) =>
      _addQuery(attribute, 'search', value);

  static String _addQuery(String attribute, String method, dynamic value) => (value
          is List)
      ? '$method("$attribute", [${value.map((item) => parseValues(item)).join(",")}])'
      : '$method("$attribute", [${parseValues(value)}])';

    static String orderAsc(String attribute) {
        return 'orderAsc("$attribute")';
    }

    static String orderDesc(String attribute) {
        return 'orderDesc("$attribute")';
    }

    static String cursorBefore(String id) {
        return 'cursorBefore("$id")';
    }

    static String cursorAfter(String id) {
        return 'cursorAfter("$id")';
    }

    static String limit(int limit) {
        return 'limit($limit)';
    }

    static String offset(int offset) {
        return 'offset($offset)';
    }

  static String parseValues(dynamic value) =>
      (value is String) ? '"$value"' : '$value';
}
